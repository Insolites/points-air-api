[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "points-air-api"
dynamic = ["version"]
description = 'API pour Points-Air'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "David Huggins-Daines", email = "dhd@ecolingui.ca" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "httpx",
  "fastapi",
  "uvicorn[standard]",
  "python-dotenv",
  "shapely",
]

[project.urls]
Documentation = "https://github.com/insolites/points-air-api#readme"
Issues = "https://github.com/insolites/points-air-api/issues"
Source = "https://github.com/insolites/points-air-api"

[project.scripts]
points_air_api = "points_air:main"
points_air_villes = "points_air.villes:main"

[tool.hatch.version]
path = "points_air/__about__.py"

[tool.hatch.build.targets.wheel]
packages = ["points_air"]

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]
dev = "DEVELOPMENT=True uvicorn points_air:app --port 8092 --reload"

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:points_air}"

[tool.coverage.run]
source_pkgs = ["points_air"]
branch = true
parallel = true
omit = [
  "points_air/__about__.py",
]

[tool.coverage.paths]
points_air_api = ["points_air", "*/points-air-api/points_air"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning",  # STFU
]
